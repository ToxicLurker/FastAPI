version: "3.7"
services:
  # cache:
  #   image: redis:6.2-alpine
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes

  cache:
    image: redislabs/redismod
    container_name: cache
    ports:
      - '6379:6379'
    networks:
      - otus-nginx-demo
      
  app1:
    build: .
    volumes:
      - ./src/test_project:/src/test_project
    ports:
      - "80:80"
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - PG_SERVICE_URI=postgresql://admin:admin@pgmaster:5432/dev
      - REDIS_SERVICE_URI=redis://cache:6379
    networks:
      - otus-nginx-demo
    depends_on:
      - cache

  dialog_ms:
    build: ./dialog_ms
    volumes:
      - ./dialog_ms/src/dialog_ms:/src/dialog_ms
    ports:
      - "12345:12345"
    environment:
      - WATCHFILES_FORCE_POLLING=true
    networks:
      - otus-nginx-demo

  pg_dialog_ms:
    image: postgres:12
    environment:
      POSTGRES_DB: "dev"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - ./dialog_ms/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5436:5432"
    networks:
      - otus-nginx-demo



  counter_ms:
    build: ./counter_ms
    volumes:
      - ./counter_ms/src/counter_ms:/src/counter_ms
    ports:
      - "12346:12346"
    environment:
      - WATCHFILES_FORCE_POLLING=true
    networks:
      - otus-nginx-demo

  pg_counter_ms:
    image: postgres:12
    environment:
      POSTGRES_DB: "dev"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - ./counter_ms/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5437:5432"
    networks:
      - otus-nginx-demo


  app3:
    build: .
    volumes:
      - ./src/test_project:/src/test_project
    ports:
      - "82:80"
    environment:
        - WATCHFILES_FORCE_POLLING=true
    networks:
      - otus-nginx-demo


  nginx:
    image: nginx:1.21
    container_name: nginx-lb
    restart: on-failure
    networks:
      - otus-nginx-demo
    volumes:
      - "./configs/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "4088:80"
      - "4098:8080"

  haproxy:
      image: haproxy:1.8
      container_name: haproxy-lb
      restart: "no"
      networks:
        - network1
        - otus-nginx-demo
      volumes:
        - "./configs/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
      ports:
        - "4080:80"
        - "8404:8404"
      links:
        - pgmaster
        - pgmaster2
        - pgmaster3
    
  pgmaster:
    image: postgres:12
    environment:
      POSTGRES_DB: "dev"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./new_people.csv:/new_people.csv
      # - ./config/postgresql.conf:/var/lib/postgresql/data/master_postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - network1
      - otus-nginx-demo

  pgmaster2:
    image: postgres:12
    environment:
      POSTGRES_DB: "dev"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./new_people.csv:/new_people.csv
      # - ./config/postgresql.conf:/var/lib/postgresql/data/master_postgresql.conf
    ports:
      - "5433:5432"
    networks:
      - network1

  pgmaster3:
    image: postgres:12
    environment:
      POSTGRES_DB: "dev"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./new_people.csv:/new_people.csv
      # - ./config/postgresql.conf:/var/lib/postgresql/data/master_postgresql.conf
    ports:
      - "5434:5432"
    networks:
      - network1


  # nginx2:
  #   image: nginx:1.21
  #   container_name: nginx-lb1
  #   restart: on-failure
  #   networks:
  #     - otus-nginx-demo
  #   volumes:
  #     - "./configs/default1.conf:/etc/nginx/conf.d/default.conf"
  #   ports:
  #     - "4089:80"
  #     - "4099:8080"
  #   links:
  #     - pgmaster
  #     - pgmaster2
  #     - pgmaster3

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   ports:
  #     - 5672:5672
  #     - 15672:15672

  # tarantool:
  #   container_name: mytarantool
  #   image: tarantool/tarantool
  #   command: tarantool ../../usr/local/share/tarantool/app.init.lua
  #   ports:
  #     - 3301:3301
  #   volumes:
  #     - ./db/app.init.lua:/usr/local/share/tarantool/app.init.lua
  #     - ./new_people.csv:/new_people.csv
  #     - ./new_people1.csv:/new_people1.csv
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - network1

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - network1
    
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@pgmaster:5432/dev?sslmode=disable"
    links:
      # - pgmaster
      - prometheus
    networks:
      - network1


  # dialog_ms:
  #   build: ./dialog_ms
  #   volumes:
  #     - ./dialog_ms/src/dialog_ms:/src/dialog_ms
  #   ports:
  #     - "12345:12345"
  #   environment:
  #     - WATCHFILES_FORCE_POLLING=true
  #   # networks:
  #   #   - network1

  # pg_dialog_ms:
  #   image: postgres:12
  #   environment:
  #     POSTGRES_DB: "dev"
  #     POSTGRES_USER: "admin"
  #     POSTGRES_PASSWORD: "admin"
  #   volumes:
  #     - ./dialog_ms/db/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - "5435:5432"

networks:
  otus-nginx-demo:
    external: true
  network1:
    name: pgnet
    external: true